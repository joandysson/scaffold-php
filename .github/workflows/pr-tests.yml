name: CI Pipeline

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  phpcs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
      - name: Install dependencies
        run: composer install --no-interaction --prefer-dist
      - name: Run PHP CodeSniffer
        run: composer phpcs

  phpstan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
      - name: Install dependencies
        run: composer install --no-interaction --prefer-dist
      - name: Run PHPStan
        run: composer phpstan

  audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
      - name: Install dependencies
        run: composer install --no-interaction --prefer-dist
      - name: Audit dependencies
        run: composer audit

  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          coverage: xdebug
      - name: Install dependencies
        run: composer install --no-interaction --prefer-dist
      - name: Run tests with coverage
        run: vendor/bin/phpunit --coverage-clover=coverage.xml tests
      - name: Calculate coverage summary
        id: coverage
        run: |
          python .github/scripts/coverage_summary.py coverage.xml ${{ github.event.pull_request.base.sha }} > summary.json
          cat summary.json
          echo "summary=$(cat summary.json)" >> "$GITHUB_OUTPUT"
      - name: Comment coverage on PR
        uses: actions/github-script@v7
        with:
          script: |
            const summary = JSON.parse(process.env.COVERAGE || '${{ steps.coverage.outputs.summary }}');
            const body = `### Coverage Report\nTotal coverage: ${summary.total}%\nChanged code coverage: ${summary.changed}%`;
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body
            });
        env:
          COVERAGE: ${{ steps.coverage.outputs.summary }}
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage.xml
